# Get the Alfresco package from the official site:
# the enterprise version if you have a licence 
# (you'll know what to get and where)
# or
# the community version if you don't have one at:
# https://www.alfresco.com/thank-you/thank-you-downloading-alfresco-community-edition
# 
# extract the Alfresco archive in /opt and create the symlink, for example:
cd /opt/
ln -s alfresco-content-services-7.4.0 alfresco

# download a supported JDK (not JRE)
cd $MYstuff
wget https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.19%2B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz
tar -xf OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz  # extract the archive
mv jdk-11.0.19+7 /opt/alfresco/java   # move and rename


# download a supported Tomcat, point 7) again, for example:
wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.75/bin/apache-tomcat-9.0.75.tar.gz
tar -xf apache-tomcat-9.0.75.tar.gz  # extract the archive
mv apache-tomcat-9.0.75 /opt/alfresco/tomcat  # move and rename


# remove all the default webapps:
rm -rf /opt/alfresco/tomcat/webapps/*



# unzip the Alfresco .war files, don't let Tomcat do it (you can
# but we want to make a few mods before Tomcat starts).
unzip /opt/alfresco/web-server/webapps/alfresco.war -d /opt/alfresco/tomcat/webapps/alfresco
unzip /opt/alfresco/web-server/webapps/share.war    -d /opt/alfresco/tomcat/webapps/share
unzip /opt/alfresco/web-server/webapps/_vti_bin.war -d /opt/alfresco/tomcat/webapps/_vti_bin
unzip /opt/alfresco/web-server/webapps/ROOT.war     -d /opt/alfresco/tomcat/webapps/ROOT


# let's go on with Tomcat's folders
mv /opt/alfresco/web-server/shared /opt/alfresco/tomcat/

# create these folders
mkdir -p /opt/alfresco/amps_share
mkdir -p /opt/alfresco/alf_data/keystore
mkdir -p /opt/alfresco/alf_data/contentstore
mkdir -p /opt/alfresco/alf_data/contentstore.deleted
mkdir -p /opt/alfresco/modules/platform
mkdir -p /opt/alfresco/modules/share
mkdir -p /opt/alfresco/tomcat/conf/Catalina/localhost
mkdir -p /opt/alfresco/tomcat/webapps.BAK


# for enterprise version only, community dont need a licence
mkdir -p /opt/alfresco/tomcat/shared/classes/alfresco/extension/license

# useless but this way we suppress a warning in catalina.out
mkdir -p /opt/alfresco/tomcat/shared/lib

# need for the log rotation
mkdir -p /opt/alfresco/tomcat/logs/old



# get the JVM keystore and trusstore the files:
wget $URL/opt/alfresco/alf_data/keystore/keystore                            -P /opt/alfresco/alf_data/keystore/
wget $URL/opt/alfresco/alf_data/keystore/keystore-passwords.properties       -P /opt/alfresco/alf_data/keystore/
wget $URL/opt/alfresco/alf_data/keystore/ssl-truststore-passwords.properties -P /opt/alfresco/alf_data/keystore/
wget $URL/opt/alfresco/alf_data/keystore/ssl.truststore                      -P /opt/alfresco/alf_data/keystore/
# note that the .properties files are not needed
# but are present for historical reasons:
# these passwords are what we'll find for most Alfresco installations





# if Postgres is the DB and the Postgres connector is missing
# put a Tomcat supported version of PostgreSQL JDBC in /opt/alfresco/tomcat/lib
# too old or too new might not work as expected, have a look at:
# https://docs.alfresco.com/content-services/latest/support/
wget https://jdbc.postgresql.org/download/postgresql-42.6.0.jar -P /opt/alfresco/tomcat/lib/



# alfresco.xml and share.xml MUST be present in the destination folder
# if the server runs both of the webapps, otherwise just the needed .xml
mv /opt/alfresco/web-server/conf/Catalina/localhost/*.xml /opt/alfresco/tomcat/conf/Catalina/localhost/


# modify /opt/alfresco/tomcat/conf/catalina.properties :
# or Tomcat won't load the Alfresco part
sed -i.ORIG 's#shared.loader\=#shared.loader=${catalina.base}/shared/classes,${catalina.base}/shared/lib/*.jar#g' /opt/alfresco/tomcat/conf/catalina.properties


# check that
/opt/alfresco/tomcat/bin/setenv.sh
# exists and correct its values
# if needed refer (or just copy it) to:
wget $URL/opt/alfresco/tomcat/bin/setenv.sh -O /opt/alfresco/tomcat/bin/setenv.sh




# alfresco-global.properties is a key file for every installation and it's properties are to be known
# start with a working one:
wget $URL/opt/alfresco/tomcat/shared/classes/alfresco-global.properties -P /opt/alfresco/tomcat/shared/classes/




# about the AMPs: look at the Alfresco site for ones you want
# also, ask your DEVs if you have custom ones to install and then
# install them, remember: Alfresco MUST be stopped
# and do a manual backup of the webapps you're going to modify
cp -ar /opt/alfresco/tomcat/webapps/alfresco /opt/alfresco/tomcat/webapps.BAK/alfresco.2023-05-30
cp -ar /opt/alfresco/tomcat/webapps/share    /opt/alfresco/tomcat/webapps.BAK/share.2023-05-30
systemctl stop alfresco
MMT install /opt/alfresco/amps/       /opt/alfresco/tomcat/webapps/alfresco/ -directory -nobackup
MMT install /opt/alfresco/amps_share/ /opt/alfresco/tomcat/webapps/share/    -directory -nobackup

# if we're installing ACS for a normal, usual, environment, we have to remember to install at least
# the AMP for the share web integration into the alfresco webapp, example:
systemctl stop alfresco
MMT install /opt/alfresco/amps/alfresco-share-services.amp /opt/alfresco/tomcat/webapps/alfresco/ -nobackup

# to check what's inside an ACS webapp, example:
MMT list /opt/alfresco/tomcat/webapps/alfresco/
Module 'alfresco-share-services' installed in '/opt/alfresco/tomcat/webapps/alfresco/'
   -    Title:        Alfresco Share Services AMP
   -    Version:      15.19
   -    Install Date: Tue Jun 20 22:17:21 CEST 2023
   -    Description:   Module to be applied to alfresco.war, containing APIs for Alfresco Share

# beware: MMT doesn't detect inexistent paths, example:
MMT list /I/do/not/exist/webapps/alfresco/
No modules are installed in this WAR file


# define logging for Alfresco and share web apps:
# we need to make this change otherwise the logs won't be
# written in /opt/alfresco/tomcat/logs
cd /opt/alfresco/tomcat/webapps/alfresco/WEB-INF/classes/
# ACS < 7.4.x I guess, check it
sed -i.ORIG 's#log4j.appender.File.File=alfresco.log#log4j.appender.File.File=${catalina.base}/logs/alfresco.log#g' log4j.properties
# ACS >= 7.4.x
sed -i.ORIG 's#alfresco.log#${catalina.base}/logs/alfresco.log#g' log4j2.properties

# read the documentation about custom-log4j.properties
cp -a log4j.properties /opt/alfresco/tomcat/shared/classes/alfresco/extension/custom-log4j.properties
or
cp -a log4j2.properties /opt/alfresco/tomcat/shared/classes/alfresco/extension/custom-log4j2.properties

cd /opt/alfresco/tomcat/webapps/share/WEB-INF/classes/
# ACS < 7.4.x
sed -i.ORIG 's#log4j.appender.File.File=share.log#log4j.appender.File.File=${catalina.base}/logs/share.log#g' log4j.properties
# ACS >= 7.4.x
sed -i.ORIG 's#share.log#${catalina.base}/logs/share.log#g' log4j2.properties


##### TO BE CHECKED FOR 7.4.X
# add some extra logging
vim /opt/alfresco/tomcat/shared/classes/alfresco/extension/custom-log4j.properties

# and add this below:
#QuerySolr debug
log4j.appender.QuerySolr=org.apache.log4j.DailyRollingFileAppender
log4j.appender.QuerySolr.File=${catalina.base}/logs/query-solr.log
log4j.appender.QuerySolr.Append=true
log4j.appender.QuerySolr.DatePattern='.'yyyy-MM-dd
log4j.appender.QuerySolr.layout=org.apache.log4j.PatternLayout
log4j.appender.QuerySolr.layout.ConversionPattern=%d{ABSOLUTE} %-5p [%c] [%t] %m%n
log4j.logger.org.alfresco.repo.search.impl.solr=DEBUG,QuerySolr
log4j.additivity.org.alfresco.repo.search.impl.solr=false
# leave the log at INFO level: when in need
# set it to DEBUG using the GUI
log4j.logger.org.alfresco.solr.query=INFO
